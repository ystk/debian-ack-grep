rename it (in the POD) to ack-grep

--- a/ack-base
+++ b/ack-base
@@ -98,39 +98,39 @@
 
 =head1 NAME
 
-ack - grep-like text finder
+ack-grep - grep-like text finder
 
 =head1 SYNOPSIS
 
-    ack [options] PATTERN [FILE...]
-    ack -f [options] [DIRECTORY...]
+    ack-grep [options] PATTERN [FILE...]
+    ack-grep -f [options] [DIRECTORY...]
 
 =head1 DESCRIPTION
 
-Ack is designed as a replacement for 99% of the uses of F<grep>.
+Ack-Grep is designed as a replacement for 99% of the uses of F<grep>.
 
-Ack searches the named input FILEs (or standard input if no files are
+Ack-Grep searches the named input FILEs (or standard input if no files are
 named, or the file name - is given) for lines containing a match to the
-given PATTERN.  By default, ack prints the matching lines.
+given PATTERN.  By default, ack-grep prints the matching lines.
 
-Ack can also list files that would be searched, without actually searching
-them, to let you take advantage of ack's file-type filtering capabilities.
+Ack-Grep can also list files that would be searched, without actually searching
+them, to let you take advantage of ack-grep's file-type filtering capabilities.
 
 =head1 FILE SELECTION
 
-I<ack> is intelligent about the files it searches.  It knows about
+I<ack-grep> is intelligent about the files it searches.  It knows about
 certain file types, based on both the extension on the file and,
 in some cases, the contents of the file.  These selections can be
 made with the B<--type> option.
 
-With no file selections, I<ack> only searches files of types that
-it recognizes.  If you have a file called F<foo.wango>, and I<ack>
-doesn't know what a .wango file is, I<ack> won't search it.
+With no file selections, I<ack-grep> only searches files of types that
+it recognizes.  If you have a file called F<foo.wango>, and I<ack-grep>
+doesn't know what a .wango file is, I<ack-grep> won't search it.
 
-The B<-a> option tells I<ack> to select all files, regardless of
+The B<-a> option tells I<ack-grep> to select all files, regardless of
 type.
 
-Some files will never be selected by I<ack>, even with B<-a>,
+Some files will never be selected by I<ack-grep>, even with B<-a>,
 including:
 
 =over 4
@@ -141,13 +141,13 @@
 
 =back
 
-However, I<ack> always searches the files given on the command line,
+However, I<ack-grep> always searches the files given on the command line,
 no matter what type. Furthermore, by specifying the B<-u> option all
 files will be searched.
 
 =head1 DIRECTORY SELECTION
 
-I<ack> descends through the directory tree of the starting directories
+I<ack-grep> descends through the directory tree of the starting directories
 specified.  However, it will ignore the shadow directories used by
 many version control systems, and the build directories used by the
 Perl MakeMaker system.  You may add or remove a directory from this
@@ -155,11 +155,11 @@
 to add/remove multiple directories from the ignore list.
 
 For a complete list of directories that do not get searched, run
-F<ack --help>.
+F<ack-grep --help>.
 
 =head1 WHEN TO USE GREP
 
-I<ack> trumps I<grep> as an everyday tool 99% of the time, but don't
+I<ack-grep> trumps I<grep> as an everyday tool 99% of the time, but don't
 throw I<grep> away, because there are times you'll still need it.
 
 E.g., searching through huge files looking for regexes that can be
@@ -221,13 +221,13 @@
 =item B<--env>, B<--noenv>
 
 B<--noenv> disables all environment processing. No F<.ackrc> is read
-and all environment variables are ignored. By default, F<ack> considers
+and all environment variables are ignored. By default, F<ack-grep> considers
 F<.ackrc> and settings in the environment.
 
 =item B<--flush>
 
 B<--flush> flushes output immediately.  This is off by default
-unless ack is running interactively (when output goes to a pipe
+unless ack-grep is running interactively (when output goes to a pipe
 or file).
 
 =item B<-f>
@@ -317,8 +317,8 @@
 same set of files.
 
     # search for foo and bar in given files
-    ack file1 t/file* --match foo
-    ack file1 t/file* --match bar
+    ack-grep file1 t/file* --match foo
+    ack-grep file1 t/file* --match bar
 
 =item B<-m=I<NUM>>, B<--max-count=I<NUM>>
 
@@ -344,7 +344,7 @@
 
 =item B<--pager=I<program>>
 
-Direct ack's output through I<program>.  This can also be specified
+Direct ack-grep's output through I<program>.  This can also be specified
 via the C<ACK_PAGER> and C<ACK_PAGER_COLOR> environment variables.
 
 Using --pager does not suppress grouping and coloring like piping
@@ -357,7 +357,7 @@
 still seeing the entire file, as in:
 
     # Watch a log file, and highlight a certain IP address
-    $ tail -f ~/access.log | ack --passthru 123.45.67.89
+    $ tail -f ~/access.log | ack-grep --passthru 123.45.67.89
 
 =item B<--print0>
 
@@ -366,7 +366,7 @@
 helpful when dealing with filenames that contain whitespace, e.g.
 
     # remove all files of type html
-    ack -f --html --print0 | xargs -0 rm -f
+    ack-grep -f --html --print0 | xargs -0 rm -f
 
 =item B<-Q>, B<--literal>
 
@@ -389,7 +389,7 @@
 =item B<--sort-files>
 
 Sorts the found files lexically.  Use this if you want your file
-listings to be deterministic between runs of I<ack>.
+listings to be deterministic between runs of I<ack-grep>.
 
 =item B<--thpppt>
 
@@ -410,7 +410,7 @@
 
 Type specifications can be repeated and are ORed together.
 
-See I<ack --help=types> for a list of valid types.
+See I<ack-grep --help=types> for a list of valid types.
 
 =item B<--type-add I<TYPE>=I<.EXTENSION>[,I<.EXT2>[,...]]>
 
@@ -478,7 +478,7 @@
 as they are not interpreted by the shell. Basically, each I<line>
 in the F<.ackrc> file is interpreted as one element of C<@ARGV>.
 
-F<ack> looks in your home directory for the F<.ackrc>.  You can
+F<ack-grep> looks in your home directory for the F<.ackrc>.  You can
 specify another location with the F<ACKRC> variable, below.
 
 If B<--noenv> is specified on the command line, the F<.ackrc> file
@@ -486,27 +486,27 @@
 
 =head1 Defining your own types
 
-ack allows you to define your own types in addition to the predefined
+ack-grep allows you to define your own types in addition to the predefined
 types. This is done with command line options that are best put into
 an F<.ackrc> file - then you do not have to define your types over and
 over again. In the following examples the options will always be shown
 on one command line so that they can be easily copy & pasted.
 
-I<ack --perl foo> searches for foo in all perl files. I<ack --help=types>
+I<ack-grep --perl foo> searches for foo in all perl files. I<ack-grep --help=types>
 tells you, that perl files are files ending
 in .pl, .pm, .pod or .t. So what if you would like to include .xs
-files as well when searching for --perl files? I<ack --type-add perl=.xs --perl foo>
+files as well when searching for --perl files? I<ack-grep --type-add perl=.xs --perl foo>
 does this for you. B<--type-add> appends
 additional extensions to an existing type.
 
 If you want to define a new type, or completely redefine an existing
-type, then use B<--type-set>. I<ack --type-set
+type, then use B<--type-set>. I<ack-grep --type-set
 eiffel=.e,.eiffel> defines the type I<eiffel> to include files with
 the extensions .e or .eiffel. So to search for all eiffel files
-containing the word Bertrand use I<ack --type-set eiffel=.e,.eiffel --eiffel Bertrand>.
+containing the word Bertrand use I<ack-grep --type-set eiffel=.e,.eiffel --eiffel Bertrand>.
 As usual, you can also write B<--type=eiffel>
 instead of B<--eiffel>. Negation also works, so B<--noeiffel> excludes
-all eiffel files from a search. Redefining also works: I<ack --type-set cc=.c,.h>
+all eiffel files from a search. Redefining also works: I<ack-grep --type-set cc=.c,.h>
 and I<.xs> files no longer belong to the type I<cc>.
 
 When defining your own types in the F<.ackrc> file you have to use
@@ -525,7 +525,7 @@
 
 
 In order to see all currently defined types, use I<--help types>, e.g.
-I<ack --type-set backup=.bak --type-add perl=.perl --help types>
+I<ack-grep --type-set backup=.bak --type-add perl=.perl --help types>
 
 Restrictions:
 
@@ -542,7 +542,7 @@
 'shell' and 'xml' cannot be redefined by I<--type-set>, it is always
 active. However, the shebang line is only examined for files where the
 extension is not recognised. Therefore it is possible to say
-I<ack --type-set perl=.perl --type-set foo=.pl,.pm,.pod,.t --perl --nofoo> and
+I<ack-grep --type-set perl=.perl --type-set foo=.pl,.pm,.pod,.t --perl --nofoo> and
 only find your shiny new I<.perl> files (and all files with unrecognized extension
 and perl on the shebang line).
 
@@ -550,7 +550,7 @@
 
 =head1 ENVIRONMENT VARIABLES
 
-For commonly-used ack options, environment variables can make life much easier.
+For commonly-used ack-grep options, environment variables can make life much easier.
 These variables are ignored if B<--noenv> is specified on the command line.
 
 =over 4
@@ -558,7 +558,7 @@
 =item ACKRC
 
 Specifies the location of the F<.ackrc> file.  If this file doesn't
-exist, F<ack> looks in the default location.
+exist, F<ack-grep> looks in the default location.
 
 =item ACK_OPTIONS
 
@@ -592,11 +592,11 @@
 =item ACK_PAGER
 
 Specifies a pager program, such as C<more>, C<less> or C<most>, to which
-ack will send its output.
+ack-grep will send its output.
 
 Using C<ACK_PAGER> does not suppress grouping and coloring like
 piping output on the command-line does, except that on Windows
-ack will assume that C<ACK_PAGER> does not support color.
+ack-grep will assume that C<ACK_PAGER> does not support color.
 
 C<ACK_PAGER_COLOR> overrides C<ACK_PAGER> if both are specified.
 
@@ -614,13 +614,13 @@
 
 =head2 Vim integration
 
-F<ack> integrates easily with the Vim text editor. Set this in your
-F<.vimrc> to use F<ack> instead of F<grep>:
+F<ack-grep> integrates easily with the Vim text editor. Set this in your
+F<.vimrc> to use F<ack-grep> instead of F<grep>:
 
-    set grepprg=ack\ -a
+    set grepprg=ack-grep\ -a
 
 That examples uses C<-a> to search through all files, but you may
-use other default flags. Now you can search with F<ack> and easily
+use other default flags. Now you can search with F<ack-grep> and easily
 step through the results in Vim:
 
   :grep Dumper perllib
@@ -638,13 +638,13 @@
 Pedro Melo is a TextMate user who writes "I spend my day mostly
 inside TextMate, and the built-in find-in-project sucks with large
 projects.  So I hacked a TextMate command that was using find +
-grep to use ack.  The result is the Search in Project with ack, and
+grep to use ack-grep.  The result is the Search in Project with ack-grep, and
 you can find it here:
 L<http://www.simplicidade.org/notes/archives/2008/03/search_in_proje.html>"
 
 =head2 Shell and Return Code
 
-For greater compatibility with I<grep>, I<ack> in normal use returns
+For greater compatibility with I<grep>, I<ack-grep> in normal use returns
 shell return or exit code of 0 only if something is found and 1 if
 no match is found.
 
@@ -657,9 +657,9 @@
 
 =cut
 
-=head1 DEBUGGING ACK PROBLEMS
+=head1 DEBUGGING ACK-GREP PROBLEMS
 
-If ack gives you output you're not expecting, start with a few simple steps.
+If ack-grep gives you output you're not expecting, start with a few simple steps.
 
 =head2 Use B<--noenv>
 
@@ -670,8 +670,8 @@
 =head2 Use B<-f> to see what files you're scanning
 
 The reason I created B<-f> in the first place was as a debugging
-tool.  If ack is not finding matches you think it should find, run
-F<ack -f> to see what files are being checked.
+tool.  If ack-grep is not finding matches you think it should find, run
+F<ack-grep -f> to see what files are being checked.
 
 =head1 TIPS
 
@@ -684,16 +684,16 @@
 
 =head2 Use F<-f> for working with big codesets
 
-Ack does more than search files.  C<ack -f --perl> will create a
+Ack-Grep does more than search files.  C<ack-grep -f --perl> will create a
 list of all the Perl files in a tree, ideal for sending into F<xargs>.
 For example:
 
     # Change all "this" to "that" in all Perl files in a tree.
-    ack -f --perl | xargs perl -p -i -e's/this/that/g'
+    ack-grep -f --perl | xargs perl -p -i -e's/this/that/g'
 
 or if you prefer:
 
-    perl -p -i -e's/this/thatg/' $(ack -f --perl)
+    perl -p -i -e's/this/thatg/' $(ack-grep -f --perl)
 
 =head2 Use F<-Q> when in doubt about metacharacters
 
@@ -702,15 +702,15 @@
 the -Q to avoid false positives without all the backslashing.  See
 the following example for more...
 
-=head2 Use ack to watch log files
+=head2 Use ack-grep to watch log files
 
 Here's one I used the other day to find trouble spots for a website
 visitor.  The user had a problem loading F<troublesome.gif>, so I
-took the access log and scanned it with ack twice.
+took the access log and scanned it with ack-grep twice.
 
-    ack -Q aa.bb.cc.dd /path/to/access.log | ack -Q -B5 troublesome.gif
+    ack-grep -Q aa.bb.cc.dd /path/to/access.log | ack-grep -Q -B5 troublesome.gif
 
-The first ack finds only the lines in the Apache log for the given
+The first ack-grep finds only the lines in the Apache log for the given
 IP.  The second finds the match on my troublesome GIF, and shows
 the previous five lines from the log in each case.
 
@@ -746,17 +746,17 @@
 is one of its greatest strengths: the speed you get from only
 searching the things that you want to be looking at.
 
-=head2 Wouldn't it be great if F<ack> did search & replace?
+=head2 Wouldn't it be great if F<ack-grep> did search & replace?
 
-No, ack will always be read-only.  Perl has a perfectly good way
+No, ack-grep will always be read-only.  Perl has a perfectly good way
 to do search & replace in files, using the C<-i>, C<-p> and C<-n>
 switches.
 
-You can certainly use ack to select your files to update.  For
+You can certainly use ack-grep to select your files to update.  For
 example, to change all "foo" to "bar" in all PHP files, you can do
 this form the Unix shell:
 
-    $ perl -i -p -e's/foo/bar/g' $(ack -f --php)
+    $ perl -i -p -e's/foo/bar/g' $(ack-grep -f --php)
 
 =head2 Can you make ack recognize F<.xyz> files?
 
@@ -773,9 +773,11 @@
 "ack-grep" when creating packages because there's already a package
 out there called "ack" that has nothing to do with this ack.
 
-I suggest you rename your ack-grep install to "ack" because one of
-the crucial benefits of ack is having a name that's so short and
-simple to type.
+I suggest you make a symlink named ack that points to ack-grep because
+one of the crucial benefits of ack is having a name that's so short
+and simple to type.
+
+To do that, run: ln -s /usr/bin/ack-grep /usr/bin/ack
 
 =head1 AUTHOR
 
@@ -791,7 +793,7 @@
 All enhancement requests MUST first be posted to the ack-users
 mailing list at L<http://groups.google.com/group/ack-users>.  I
 will not consider a request without it first getting seen by other
-ack users.  This includes requests for new filetypes.
+ack-grep users.  This includes requests for new filetypes.
 
 There is a list of enhancements I want to make to F<ack> in the ack
 issues list at Github: L<http://github.com/petdance/ack/issues>
@@ -801,7 +803,7 @@
 
 =head1 SUPPORT
 
-Support for and information about F<ack> can be found at:
+Support for and information about F<ack-grep> can be found at:
 
 =over 4
 
@@ -835,7 +837,7 @@
 
 How appropriate to have I<ack>nowledgements!
 
-Thanks to everyone who has contributed to ack in any way, including
+Thanks to everyone who has contributed to ack-grep in any way, including
 Packy Anderson,
 JR Boyens,
 Dan Sully,
--- a/Ack.pm
+++ b/Ack.pm
@@ -269,7 +269,7 @@
     my $parser = Getopt::Long::Parser->new();
     $parser->configure( 'bundling', 'no_ignore_case', );
     $parser->getoptions( %{$getopt_specs} ) or
-        App::Ack::die( 'See ack --help, ack --help-types or ack --man for options.' );
+        App::Ack::die( 'See ack-grep --help, ack-grep --help-types or ack-grep --man for options.' );
 
     my $to_screen = not output_to_pipe();
     my %defaults = (
@@ -365,7 +365,7 @@
     $parser->getoptions(
         'type-set=s' => sub { shift; push @typedef, ['c', shift] },
         'type-add=s' => sub { shift; push @typedef, ['a', shift] },
-    ) or App::Ack::die( 'See ack --help or ack --man for options.' );
+    ) or App::Ack::die( 'See ack-grep --help or ack-grep --man for options.' );
 
     for my $td (@typedef) {
         my ($type, $ext) = split /=/, $td->[1];
@@ -647,7 +647,7 @@
 
 sub _thpppt {
     my $y = _get_thpppt();
-    App::Ack::print( "$y ack $_[0]!\n" );
+    App::Ack::print( "$y ack-grep $_[0]!\n" );
     exit 0;
 }
 
@@ -672,18 +672,18 @@
     my $ignore_dirs = _listify( sort { _key($a) cmp _key($b) } keys %ignore_dirs );
 
     App::Ack::print( <<"END_OF_HELP" );
-Usage: ack [OPTION]... PATTERN [FILE]
+Usage: ack-grep [OPTION]... PATTERN [FILE]
 
 Search for PATTERN in each source file in the tree from cwd on down.
 If [FILES] is specified, then only those files/directories are checked.
-ack may also search STDIN, but only if no FILE are specified, or if
+ack-grep may also search STDIN, but only if no FILE are specified, or if
 one of FILES is "-".
 
 Default switches may be specified in ACK_OPTIONS environment variable or
 an .ackrc file. If you want no dependency on the environment, turn it
 off with --noenv.
 
-Example: ack -i select
+Example: ack-grep -i select
 
 Searching:
   -i, --ignore-case     Ignore case distinctions in PATTERN
@@ -726,7 +726,7 @@
                         only works with -f, -g, -l, -L or -c.
 
 File presentation:
-  --pager=COMMAND       Pipes all ack output through COMMAND.  For example,
+  --pager=COMMAND       Pipes all ack-grep output through COMMAND.  For example,
                         --pager="less -R".  Ignored if output is redirected.
   --nopager             Do not send output through a pager.  Cancels any
                         setting in ~/.ackrc, ACK_PAGER or ACK_PAGER_COLOR.
@@ -741,7 +741,7 @@
   --[no]colour          Same as --[no]color
   --color-filename=COLOR
   --color-match=COLOR   Set the color for matches and filenames.
-  --flush               Flush output immediately, even when ack is used
+  --flush               Flush output immediately, even when ack-grep is used
                         non-interactively (when output goes to a pipe or
                         file).
 
@@ -756,7 +756,7 @@
                         Ignores CVS, .svn and other ignored directories
   -u, --unrestricted    All files and directories searched
   --[no]ignore-dir=name Add/Remove directory from the list of ignored dirs
-  -r, -R, --recurse     Recurse into subdirectories (ack's default behavior)
+  -r, -R, --recurse     Recurse into subdirectories (ack-grep's default behavior)
   -n, --no-recurse      No descending into subdirectories
   -G REGEX              Only search files that match REGEX
 
@@ -764,7 +764,7 @@
   --type=perl           Include only Perl files.
   --noperl              Exclude Perl files.
   --type=noperl         Exclude Perl files.
-                        See "ack --help type" for supported filetypes.
+                        See "ack-grep --help type" for supported filetypes.
 
   --type-set TYPE=.EXTENSION[,.EXT2[,...]]
                         Files with the given EXTENSION(s) are recognized as
@@ -794,7 +794,7 @@
 
 Exit status is 0 if match, 1 if no match.
 
-This is version $VERSION of ack.
+This is version $VERSION of ack-grep.
 END_OF_HELP
 
     return;
@@ -809,9 +809,9 @@
 
 sub show_help_types {
     App::Ack::print( <<'END_OF_HELP' );
-Usage: ack [OPTION]... PATTERN [FILES]
+Usage: ack-grep [OPTION]... PATTERN [FILES]
 
-The following is the list of filetypes supported by ack.  You can
+The following is the list of filetypes supported by ack-grep.  You can
 specify a file type with the --type=TYPE format, or the --TYPE
 format.  For example, both --type=perl and --perl work.
 
@@ -854,7 +854,7 @@
 
 =head2 get_version_statement
 
-Returns the version information for ack.
+Returns the version information for ack-grep.
 
 =cut
 
@@ -870,7 +870,7 @@
     my $ver = sprintf( '%vd', $^V );
 
     return <<"END_OF_VERSION";
-ack $VERSION
+ack-grep $VERSION
 Running under Perl $ver at $this_perl
 
 $copyright
@@ -883,7 +883,7 @@
 
 =head2 print_version_statement
 
-Prints the version information for ack.
+Prints the version information for ack-grep.
 
 =cut
 
@@ -895,7 +895,7 @@
 
 =head2 get_copyright
 
-Return the copyright for ack.
+Return the copyright for ack-grep.
 
 =cut
 
@@ -1493,7 +1493,7 @@
 
 =head2 input_from_pipe()
 
-Returns true if ack's input is coming from a pipe.
+Returns true if ack-grep's input is coming from a pipe.
 
 =cut
 
@@ -1504,7 +1504,7 @@
 
 =head2 output_to_pipe()
 
-Returns true if ack's input is coming from a pipe.
+Returns true if ack-grep's input is coming from a pipe.
 
 =cut
 
